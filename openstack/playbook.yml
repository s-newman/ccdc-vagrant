---
- hosts: all
  become: yes
  vars:
    apt_packages:
      - bridge-utils
      - debootstrap
      - ifenslave
      - ifenslave-2.6
      - lsof
      - lvm2
      - chrony
      - openssh-server
      - sudo
      - tcpdump
      - vlan
      - python

  tasks:
    - name: Configure udev rules
      template:
        src: ./udev.rules
        dest: /etc/udev/rules.d/70-persistent-net.rules
      notify:
        - Apply udev changes

    - name: Disable cloud init network config
      copy:
        src: ./cloud-init.yml
        dest: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg

    - name: Configure netplan
      template:
        src: ./netplan.yml
        dest: /etc/netplan/50-cloud-init.yaml
    
    - name: Create post-up script location
      file:
        state: directory
        path: /etc/networkd-dispatcher/configured.d
        owner: root
        group: root
    
    - name: Configure post-up script
      copy:
        src: ./50promisc.sh
        dest: /etc/networkd-dispatcher/configured.d/50promisc
        owner: root
        group: root
        mode: 0774
    
    - name: Install packages
      apt:
        state: present
        name: '{{ apt_packages }}'
        force_apt_get: yes
        update_cache: yes
    
    - name: Add kernel modules
      lineinfile:
        state: present
        path: /etc/modules
        line: '{{ item }}'
        create: yes
      loop:
        - bonding
        - 8021q
    
    - name: Restart NTP client
      systemd:
        state: restarted
        name: chrony
        enabled: yes
    
    - name: Set hostname
      hostname:
        name: '{{ inventory_hostname }}'

    - name: Configure ghetto DNS
      template:
        src: ./hosts
        dest: /etc/hosts

    - name: Add ops user
      user:
        state: present
        name: ops
        shell: /bin/bash

    - name: Give ops user passwordless sudo
      copy:
        src: ops-sudoer
        dest: /etc/sudoers.d/ops
        owner: root
        group: root
        mode: 0440

    - name: Create SSH directory
      file:
        state: directory
        path: /home/ops/.ssh

    - name: Add SSH key (ops)
      copy:
        src: ~/.vagrant.d/insecure_private_key
        dest: /home/ops/.ssh/id_rsa
        owner: ops
        group: ops
        mode: 0600

    - name: Add SSH key (root)
      copy:
        src: ~/.vagrant.d/insecure_private_key
        dest: /root/.ssh/id_rsa
        owner: root
        group: root
        mode: 0600
    
    - name: Add & authorize SSH pubkey (ops)
      copy:
        src: /home/vagrant/.ssh/authorized_keys
        dest: '{{ item }}'
        remote_src: yes
        owner: ops
        group: ops
      loop:
        - /home/ops/.ssh/id_rsa.pub
        - /home/ops/.ssh/authorized_keys

    - name: Add & authorize SSH pubkey (root)
      copy:
        src: /home/vagrant/.ssh/authorized_keys
        dest: '{{ item }}'
        remote_src: yes
        owner: root
        group: root
      loop:
        - /root/.ssh/id_rsa.pub
        - /root/.ssh/authorized_keys

    - name: Configure SSH
      copy:
        src: ./config
        dest: /home/ops/.ssh/config
        owner: ops
        group: ops
        mode: 0600
    
    - name: Reboot to apply kernel changes
      reboot:
    
  handlers:
    - name: Apply netplan changes
      command: netplan apply
    
    - name: Apply udev changes
      shell: udevadm control --reload-rules && udevadm trigger

- hosts: mgmt01
  become: yes
  tasks:
    - name: Set up ceph
      script: ./ceph-setup.sh
      args:
        creates: /home/ops/ritsec-ceph/ceph.conf
        chdir: /home/ops
      become_user: ops

    - name: Clone openstack-ansible
      git:
        repo: https://github.com/ritsec/openstack-ansible.git
        dest: /opt/openstack-ansible

    - name: Link configuration directory
      file:
        state: link
        src: /opt/openstack-ansible/etc/openstack_deploy
        path: /etc/openstack_deploy

    - name: Delete inventory files (1)
      command: rm /etc/openstack_deploy/openstack_hostnames_ips.yml

    - name: Delete inventory files (2)
      command: rm /etc/openstack_deploy/openstack_inventory.json

    - name: Delete inventory files (3)
      command: rm -rf /etc/openstack_deploy/ansible_facts/*

    - name: Remove extra Nova nodes
      command: sed -ie '/nova04:/,+17d' /etc/openstack_deploy/openstack_user_config.yml

    - name: Download secrets file
      get_url:
        url: 'https://raw.githubusercontent.com/openstack/openstack-ansible/master/etc/openstack_deploy/user_secrets.yml'
        dest: /etc/openstack_deploy/user_secrets.yml
        mode: 0400

    - name: Prepare controller host
      command: /opt/openstack-ansible/scripts/bootstrap-ansible.sh

    - name: Generate secrets
      command: /opt/openstack-ansible/scripts/pw-token-gen.py --file /etc/openstack_deploy/user_secrets.yml
